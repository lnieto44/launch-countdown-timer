{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\frontend-sprint-2-lnieto44\\\\reto_2\\\\components\\\\Countdown.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useRouter } from \"next/router\";\nimport { DateTime } from \"luxon\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport FlippingNumber from \"./FlippingNumber\";\nimport { CountdownContainer } from \"../styles/StyledComponent\";\n\nvar getTimeLeft = function getTimeLeft(endDate) {\n  var now = DateTime.local();\n\n  var _endDate$diff = endDate.diff(now, [\"days\", \"hours\", \"minutes\", \"seconds\"]),\n      days = _endDate$diff.days,\n      hours = _endDate$diff.hours,\n      minutes = _endDate$diff.minutes,\n      seconds = _endDate$diff.seconds;\n\n  return {\n    days: Math.max(0, Math.trunc(days)),\n    hours: Math.max(0, Math.trunc(hours)),\n    minutes: Math.max(0, Math.trunc(minutes)),\n    seconds: Math.max(0, Math.trunc(seconds))\n  };\n};\n\nvar useCountdown = function useCountdown(endDate) {\n  _s();\n\n  var initial = getTimeLeft(endDate);\n\n  var _useState = useState({\n    current: initial,\n    previous: null\n  }),\n      _useState$ = _useState[0],\n      current = _useState$.current,\n      previous = _useState$.previous,\n      setCountdown = _useState[1];\n\n  useEffect(function () {\n    var timer = window.setInterval(function () {\n      setCountdown(function (_ref) {\n        var current = _ref.current;\n        return {\n          previous: current,\n          current: getTimeLeft(endDate)\n        };\n      });\n    }, 1000);\n    return function () {\n      return clearInterval(timer);\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return {\n    previous: previous,\n    current: current\n  };\n};\n\n_s(useCountdown, \"1Cl5QY3FolaNjqKeO7GMePUPWXM=\");\n\nexport default function Countdown() {\n  _s2();\n\n  var _this = this;\n\n  var router = useRouter();\n  var defaultTime = useMemo(function () {\n    return DateTime.local(2022, 4, 12, 0);\n  }, []);\n  var initialDate = router.query.date ? DateTime.fromISO(Array.isArray(router.query.date) ? router.query.date[0] : router.query.date) : null;\n\n  var _useCountdown = useCountdown(initialDate && initialDate.isValid ? initialDate : defaultTime),\n      current = _useCountdown.current;\n\n  var INTERVAL = 1000;\n  return /*#__PURE__*/_jsxDEV(CountdownContainer, {\n    children: Object.keys(current).map(function (key) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(FlippingNumber, {\n          animationDuration: INTERVAL,\n          number: current[key]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mobile\",\n          children: key.charAt(0).toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"desktop\",\n          children: key.charAt(0).toUpperCase() + key.substr(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, _this)]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Countdown, \"HO5SywidoUp4CQ+0PXB6LCIpZvQ=\", false, function () {\n  return [useRouter, useCountdown];\n});\n\n_c = Countdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countdown\");","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/frontend-sprint-2-lnieto44/reto_2/components/Countdown.js"],"names":["useRouter","DateTime","useEffect","useMemo","useState","FlippingNumber","CountdownContainer","getTimeLeft","endDate","now","local","diff","days","hours","minutes","seconds","Math","max","trunc","useCountdown","initial","current","previous","setCountdown","timer","window","setInterval","clearInterval","Countdown","router","defaultTime","initialDate","query","date","fromISO","Array","isArray","isValid","INTERVAL","Object","keys","map","key","charAt","toUpperCase","substr"],"mappings":"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","sourcesContent":["import { useRouter } from \"next/router\";\nimport { DateTime } from \"luxon\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport FlippingNumber from \"./FlippingNumber\";\nimport { CountdownContainer } from \"../styles/StyledComponent\";\n\n\n\nconst getTimeLeft = (endDate) => {\n  const now = DateTime.local();\n  const { days, hours, minutes, seconds } = endDate.diff(now, [\n    \"days\",\n    \"hours\",\n    \"minutes\",\n    \"seconds\",\n  ]);\n  return {\n    days: Math.max(0, Math.trunc(days)),\n    hours: Math.max(0, Math.trunc(hours)),\n    minutes: Math.max(0, Math.trunc(minutes)),\n    seconds: Math.max(0, Math.trunc(seconds)),\n  };\n};\n\nconst useCountdown = (endDate) => {\n  const initial = getTimeLeft(endDate);\n  const [{ current, previous }, setCountdown] = useState({\n    current: initial,\n    previous: null,\n  });\n\n  useEffect(() => {\n    const timer = window.setInterval(() => {\n      setCountdown(({ current }) => {\n        return {\n          previous: current,\n          current: getTimeLeft(endDate),\n        };\n      });\n    }, 1000);\n    return () => clearInterval(timer);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return { previous, current };\n};\n\nexport default function Countdown() {\n  const router = useRouter();\n  const defaultTime = useMemo(() => DateTime.local(2022, 4, 12, 0), []);\n  const initialDate = router.query.date\n    ? DateTime.fromISO(\n        Array.isArray(router.query.date)\n          ? router.query.date[0]\n          : router.query.date\n      )\n    : null;\n  const { current } = useCountdown(\n    initialDate && initialDate.isValid ? initialDate : defaultTime\n  );\n\n  const INTERVAL = 1000;\n\n\n  return (\n    <CountdownContainer>\n      {Object.keys(current).map((key) => {\n        return (\n          <div key={key}>\n            <FlippingNumber\n              animationDuration={INTERVAL}\n              number={current[key]}\n            />\n            <div className=\"mobile\">{key.charAt(0).toUpperCase()}</div>\n            <div className=\"desktop\">\n              {key.charAt(0).toUpperCase() + key.substr(1)}\n            </div>\n          </div>\n        );\n      })}\n    </CountdownContainer>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}